

@{
    Layout = "~/Views/Shared/_MasterPage.cshtml";
}

<div class="panelmaster">
    <h2>Shopping Cart</h2>
    <hr>
    <form class="row g-3" id="myForm">
        <div class="col-md-6">
            <label for="transactionNumber" class="form-label">Transaction Number:</label>
            <input type="text" class="form-control" id="transactionNumber" placeholder="Enter Transaction Number" name="transactionNumber" readonly>
        </div>
        <div class="col-md-6">
            <label for="transactionDate" class="form-label">Transaction Date:</label>
            <input type="date" class="form-control" id="transactionDate" placeholder="Enter Transaction Date" name="transactionDate" readonly>
        </div>
        <div class="col-12">
            <button id="btnProduct" type="button" class="btn btn-success">Product</button>
        </div>
        @*<div class="cart">
            <!-- Cart items will be dynamically added here -->
        </div>*@
        <hr>
        <div>
            <table id="myTable" class="display">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>ProductCode</th>
                        <th>ProductDesc</th>
                        <th>Price</th>
                        <th>Stock</th>
                        <th>CreateBy</th>
                        <th>Manage</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <hr>
        <h2>Cart Details</h2>
        <div class="col-md-6">
            <label for="amount" class="form-label">Total Amount:</label>
            <input type="number" class="form-control" id="amount" placeholder="Enter Amount" name="amount" maxlength="10" readonly>
        </div>
        <div class="col-12">
            <button id="btnCheckout" type="button" class="btn btn-primary">Checkout</button>
        </div>
        <hr>
        <div>
            <table id="myCart" class="display">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>ProductCode</th>
                        <th>ProductDesc</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Remove</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </form>
        <hr>
        <hr>
        <hr>
        <hr>
    <hr>
    <hr>
</div>

<script>
    var cart = [];
    var listCart = [];
    var total = 0;
    var myTable;
    var myCart;
    $(document).ready(function () {
        setEventjQuery();
    });

    function setEventjQuery() {
        var now = new Date();

        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);

        var today = now.getFullYear() + "-" + (month) + "-" + (day);
        let randomNum = Math.floor(Math.random() * 9000000000) + 1000000000;

        $('#amount').val('0');
        $('#transactionNumber').val(randomNum);
        $('#transactionDate').val(today);

        $("#btnProduct").on("click", function () {
            SearchData();
        });
        $("#btnCheckout").on("click", function () {
            Createtransaction();
        });

        setDataTable();
        setDataTableChart();
    }

    function setDataTable() {
        myTable = $('#myTable').DataTable({
            searching: false,
            "columnDefs": [
                {
                    targets: 6,
                    render: function (data, type, row, meta) {
                        //var idCard = "'" + row[1] + "'";
                        var param1 = "'" + row[1] + "'";
                        var param2 = "'" + row[3] + "'";
                        var param3 = "'" + row[4] + "'";
                        var param4 = "'" + row[2] + "'";
                        return '<center><a class="datalink" style="cursor:pointer" onclick="addToCart(' + param1 + ',' + param2 + ',' + param3 + ',' + param4 + ')">' + 'Select' + '</a></center>';
                        //return '<center><a href="#" style="cursor:pointer" onclick="addToCart(' + idCard + ', ' + asas2 + ')">' + 'Select' + '</a></center>';
                    }
                }
            ]
        });
        myTable.draw(false);
    }


    function setDataTableChart() {
        myCart = $('#myCart').DataTable({
            searching: false,
            "columnDefs": [
                {
                    targets: 5,
                    render: function (data, type, row, meta) {
                        var param1 = "'" + row[1] + "'";
                        var param2 = "'" + row[3] + "'";
                        return '<center><a class="datalink" style="cursor:pointer" onclick="removeToCart(' + param1 + ',' + param2 + ')">' + 'Remove' + '</a></center>';
                    }
                },
                {
                    targets: 6,
                    render: function (data, type, row, meta) {
                        var param1 = "'" + row[1] + "'";
                        var param2 = "'" + row[3] + "'";
                        return '<center><a class="datalink" style="cursor:pointer" onclick="deleteToCart(' + param1 + ',' + param2 + ')">' + 'Delete' + '</a></center>';
                    }
                }
            ]
        });
        myCart.draw(false);
    }

    function SearchData() {
        var payload = {
            "deviceInfo": "1111111111111"
        };

        var _url = "Home/GetListProduct";
        var _datajson = JSON.stringify(payload);;

        xhr_request_internal(_url, _datajson, function (result) {
            var response = jQuery.parseJSON(result);
            if (response.status != 200) {
                alert(response.message);
            }

            myTable.rows().remove();
            myTable.clear();
            myTable.draw(false);

            var listProduct = response.data.listProduct;
            for (var i = 0; i < listProduct.length; i++) {
                myTable.row.add([
                    i + 1,
                    listProduct[i].productCode,
                    listProduct[i].productDesc,
                    listProduct[i].price,
                    listProduct[i].quantity,
                    listProduct[i].createBy,
                    "Manage"
                ])
            }

            myTable.draw(false);
        });
    }

    function ShowCart() {
        myCart.rows().remove();
        myCart.clear();
        myCart.draw(false);

        for (var i = 0; i < listCart.length; i++) {
            myCart.row.add([
                i + 1,
                listCart[i].productCode,
                listCart[i].productDesc,
                listCart[i].price,
                listCart[i].quantity,
                "Remove",
                "Delete"
            ])
        }

        myCart.draw(false);
        $("#amount").val(total);
    }

    function addToCart(productCode, price, stock, productDesc) {
        var _price = parseFloat(price);
        let index = listCart.findIndex(obj => obj.productCode === productCode);
        if (index == -1) {
            var chatItem = {
                productCode: productCode,
                price: _price,
                quantity: 1,
                productDesc: productDesc
            };

            listCart.push(chatItem);
        }
        else {
            if (stock < listCart[index].quantity) {
                alert('Out of stock');
                return;
            }
            else {
                listCart[index].quantity = listCart[index].quantity + 1;
            }
        }

        console.log("product", listCart);

        total += parseFloat(price);
        ShowCart();

    }

    function removeToCart(productCode, price) {
        let index = listCart.findIndex(obj => obj.productCode === productCode);
        if (index != -1) {
            listCart[index].quantity = listCart[index].quantity - 1;
            if (listCart[index].quantity < 1) {
                listCart.splice(index, 1);
            }
        }

        if (listCart[index] == undefined) {
            total -= parseFloat(price);
        }
        else {
            total -= parseFloat(listCart[index].price);
        }
        ShowCart();

        console.log("product", listCart);

    }

    function deleteToCart(productCode, price) {
        let index = listCart.findIndex(obj => obj.productCode === productCode);
        if (index != -1) {
            total -= parseFloat(listCart[index].price) * listCart[index].quantity;
            listCart.splice(index, 1);
            ShowCart();
        }

        console.log("product", listCart);

    }

    function Createtransaction() {
        var payload = {
            "deviceInfo": "ShppingCartUI",
            "transactionId": $('#transactionNumber').val(),
            "totalAmount": $('#amount').val(),
            "listProduct": listCart
        };

        var _url = "Home/CreateTransaction";
        var _datajson = JSON.stringify(payload);;

        xhr_request_internal(_url, _datajson, function (result) {
            var response = jQuery.parseJSON(result);
            if (response.status != 200) {
                alert(response.message);
            }

            alert("Thank you for using the service.");
            location.reload();
        });
    }




    function xhr_request_internal(_url, _datajson, _callback) {
        var _host = "http://localhost:5246/";
        var url = _host + _url;
        jQuery.support.cors = true;

        $.ajax({
            url: url,
            type: "POST",
            cache: false,
            contentType: "application/json",
            data: _datajson,
            async: false,
            success: function (result) {
                return _callback(result);
            },
            error: function (xhr) {
                alert("กรุณาลองใหม่อีกครั้ง.." + xhr);
                //stop_hide_loading();
            }
        });
    }
</script>

<style>
    .datalink {
        cursor: pointer;
        color: blue;
        text-decoration: underline;
    }
</style>

