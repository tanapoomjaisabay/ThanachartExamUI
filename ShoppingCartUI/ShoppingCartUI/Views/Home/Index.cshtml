

@{
    Layout = "~/Views/Shared/_MasterPage.cshtml";
}

<div class="panelmaster">
    <h2>Shopping Cart</h2>
    <hr>
    <form class="row g-3" id="myForm">
        <div class="col-md-6">
            <label for="transactionNumber" class="form-label">Transaction Number:</label>
            <input type="text" class="form-control" id="transactionNumber" placeholder="Enter Transaction Number" name="transactionNumber" readonly>
        </div>
        <div class="col-md-6">
            <label for="transactionDate" class="form-label">Transaction Date:</label>
            <input type="date" class="form-control" id="transactionDate" placeholder="Enter Transaction Date" name="transactionDate" readonly>
        </div>
        <div class="col-md-6">
            <label for="amount" class="form-label">Total Amount:</label>
            <input type="number" class="form-control" id="amount" placeholder="Enter Amount" name="amount" maxlength="10" readonly>
        </div>
        <div class="col-12">
            <button id="btnProduct" type="button" class="btn btn-success">Product</button>
            <button id="btnCheckout" type="button" class="btn btn-primary">Checkout</button>
        </div>
        <hr>
        <h2>Product Details</h2>
        <div class="cart">
            <!-- Cart items will be dynamically added here -->
        </div>
        <hr>
        <div>
            <table id="myTable" class="display">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>ProductCode</th>
                        <th>ProductDesc</th>
                        <th>Price</th>
                        <th>Stock</th>
                        <th>CreateBy</th>
                        <th>Manage</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </form>
        <hr>
        <hr>
        <hr>
        <hr>
    <hr>
    <hr>
</div>

<script>
    var myTable;
    $(document).ready(function () {
        setEventjQuery();
    });

    function setEventjQuery() {
        var now = new Date();

        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);

        var today = now.getFullYear() + "-" + (month) + "-" + (day);

        $('#transactionDate').val(today);

        $("#btnProduct").on("click", function () {
            SearchData();
        });

        setDataTable();
    }

    function setDataTable() {
        myTable = $('#myTable').DataTable({
            searching: false,
            //"columnDefs": [
            //    {
            //        targets: 6,
            //        render: function (data, type, row, meta) {
            //            //var idCard = "'" + row[1] + "'";
            //            return '<center><a href="#" style="cursor:pointer" onclick="addToCart("AAA", "10")">' + 'Select' + '</a></center>';
            //            //return '<center><a href="#" style="cursor:pointer" onclick="addToCart(' + idCard + ', ' + asas2 + ')">' + 'Select' + '</a></center>';
            //        }
            //    }
            //]
        });
        myTable.draw(false);
    }

    function SearchData() {
        var payload = {
            "deviceInfo": "1111111111111"
        };

        var _url = "Home/GetListProduct";
        var _datajson = JSON.stringify(payload);;

        xhr_request_internal(_url, _datajson, function (result) {
            var response = jQuery.parseJSON(result);
            if (response.status != 200) {
                alert(response.message);
            }

            myTable.rows().remove();
            myTable.clear();
            myTable.draw(false);

            var listProduct = response.data.listProduct;
            for (var i = 0; i < listProduct.length; i++) {
                myTable.row.add([
                    i + 1,
                    listProduct[i].productCode,
                    listProduct[i].productDesc,
                    listProduct[i].price,
                    listProduct[i].quantity,
                    listProduct[i].createBy,
                    "Manage"
                ])
            }

            myTable.draw(false);
        });
    }

    function addToCart(productName, price) {
        // Create a new cart item object
        var item = {
            name: productName,
            price: price
        };

        // Add the item to the cart array
        cart.push(item);

        // Update the total price
        total += price;

        // Render the cart items
        renderCart();
    }

    // Function to remove items from the cart
    function removeFromCart(index) {
        // Retrieve the item and its price
        var item = cart[index];
        var price = item.price;

        // Remove the item from the cart array
        cart.splice(index, 1);

        // Update the total price
        total -= price;

        // Render the cart items
        renderCart();
    }

    // Function to render the cart items and update the total price
    function renderCart() {
        var cartContainer = document.querySelector('.cart');
        cartContainer.innerHTML = ''; // Clear previous cart items

        // Loop through the cart items and display them
        for (var i = 0; i < cart.length; i++) {
            var cartItem = document.createElement('div');
            cartItem.className = 'cart-item';
            cartItem.textContent = cart[i].name + ' - $' + cart[i].price;

            // Create a remove button for each item
            var removeButton = document.createElement('button');
            removeButton.textContent = 'Remove';
            removeButton.onclick = (function (index) {
                return function () {
                    removeFromCart(index);
                }
            })(i);

            // Append the remove button to the cart item
            cartItem.appendChild(removeButton);

            // Append the cart item to the cart container
            cartContainer.appendChild(cartItem);
        }

        // Update the total price display
        var totalPrice = document.createElement('div');
        totalPrice.textContent = 'Total Price: $' + total.toFixed(2);
        cartContainer.appendChild(totalPrice);
    }




    function xhr_request_internal(_url, _datajson, _callback) {
        var _host = "http://localhost:5246/";
        var url = _host + _url;
        jQuery.support.cors = true;

        $.ajax({
            url: url,
            type: "POST",
            cache: false,
            contentType: "application/json",
            data: _datajson,
            async: false,
            success: function (result) {
                return _callback(result);
            },
            error: function (xhr) {
                alert("กรุณาลองใหม่อีกครั้ง.." + xhr);
                //stop_hide_loading();
            }
        });
    }
</script>


@*<!DOCTYPE html>
<html>
<head>
    <title>Shopping Cart</title>
    <style>
        /* Add some basic styling to the shopping cart */
        .cart {
            width: 300px;
            padding: 20px;
            border: 1px solid #ccc;
            background-color: #f9f9f9;
        }

        /* Style the cart items */
        .cart-item {
            margin-bottom: 10px;
            padding: 5px;
            border: 1px solid #ccc;
            background-color: #fff;
        }
    </style>
</head>
</html>*@

@*<body>
    <h1>Shopping Cart</h1>

    <div class="cart">
        <!-- Cart items will be dynamically added here -->
    </div>

    <h2>Products</h2>

    <!-- Example product buttons -->
    <button onclick="addToCart('Product 1', 10.99)">Add Product 1 to Cart</button>
    <button onclick="addToCart('Product 2', 19.99)">Add Product 2 to Cart</button>
    <button onclick="addToCart('Product 3', 7.99)">Add Product 3 to Cart</button>

    <script>
        var cart = []; // Array to store cart items
        var total = 0; // Variable to track total price

        // Function to add items to the cart
        function addToCart(productName, price) {
            // Create a new cart item object
            var item = {
                name: productName,
                price: price
            };

            // Add the item to the cart array
            cart.push(item);

            // Update the total price
            total += price;

            // Render the cart items
            renderCart();
        }

        // Function to remove items from the cart
        function removeFromCart(index) {
            // Retrieve the item and its price
            var item = cart[index];
            var price = item.price;

            // Remove the item from the cart array
            cart.splice(index, 1);

            // Update the total price
            total -= price;

            // Render the cart items
            renderCart();
        }

        // Function to render the cart items and update the total price
        function renderCart() {
            var cartContainer = document.querySelector('.cart');
            cartContainer.innerHTML = ''; // Clear previous cart items

            // Loop through the cart items and display them
            for (var i = 0; i < cart.length; i++) {
                var cartItem = document.createElement('div');
                cartItem.className = 'cart-item';
                cartItem.textContent = cart[i].name + ' - $' + cart[i].price;

                // Create a remove button for each item
                var removeButton = document.createElement('button');
                removeButton.textContent = 'Remove';
                removeButton.onclick = (function (index) {
                    return function () {
                        removeFromCart(index);
                    }
                })(i);

                // Append the remove button to the cart item
                cartItem.appendChild(removeButton);

                // Append the cart item to the cart container
                cartContainer.appendChild(cartItem);
            }

            // Update the total price display
            var totalPrice = document.createElement('div');
            totalPrice.textContent = 'Total Price: $' + total.toFixed(2);
            cartContainer.appendChild(totalPrice);
        }
    </script>
</body>
*@